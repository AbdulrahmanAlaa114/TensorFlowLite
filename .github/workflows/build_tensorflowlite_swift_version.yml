name: Build Specific TensorFlowLiteSwift Version

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to build'
        required: true
      
permissions:
  contents: write
  
jobs:
  clone_and_build:
    name: Clone TensorFlowLiteC / TensorFlowLiteSwift
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Check if Tag Exists and Build
        id: check-tag
        uses: mukunku/tag-exists-action@v1.6.0
        with:
          tag: ${{ github.event.inputs.release_version }}
          
      - name: Create Release Branch
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          git checkout -b release-${{ github.event.inputs.release_version }}
          
      - name: Clone TensorFlow Repository
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          repository: 'tensorflow/tensorflow'
          path: '${{ github.workspace }}/tensorflow'
          fetch-tags: true
          ref: 'v${{ github.event.inputs.release_version }}'
          
      - name: Clone TensorFlowLiteC Repository
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          repository: 'tareksabry1337/TensorFlowLiteC'
          path: '${{ github.workspace }}/tensorflowlitec'
          fetch-tags: true
          ref: '${{ github.event.inputs.release_version }}'
          
      - name: Copy TensorFlowLiteSwift Files
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          find ${{ github.workspace }}/tensorflow/tensorflow/lite/swift/Sources -type f ! -name 'MetalDelegate.swift' -exec cp -v {} ${{ github.workspace }}/Sources/TensorFlowLiteSwift \;
          git add Sources/*
          git commit -m "Add TensorFlowLiteSwift Files"
          git push -u origin release-${{ github.event.inputs.release_version }}
          
          
#      - name: Upload Release
#        if: steps.check-tag.outputs.exists == 'false'
#        uses: svenstaro/upload-release-action@v2
#        with:
#          file_glob: true
#          file: '*.zip'
#          tag: ${{ github.event.inputs.release_version }}
#          overwrite: true
#          
#      - name: Get API URL
#        if: steps.check-tag.outputs.exists == 'false'
#        env:
#          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
#        run: |
#          TENSOR_FLOW_LITE_C_API_URL=$(gh release view ${{ github.event.inputs.release_version }} --json assets -q '.assets[] | select (.name == "TensorFlowLiteC.xcframework.zip").apiUrl')
#          TENSOR_FLOW_LITE_C_CORE_ML_API_URL=$(gh release view ${{ github.event.inputs.release_version }} --json assets -q '.assets[] | select (.name == "TensorFlowLiteCCoreML.xcframework.zip").apiUrl')
#          echo "TENSOR_FLOW_LITE_C_API_URL=$TENSOR_FLOW_LITE_C_API_URL.zip" >> $GITHUB_ENV
#          echo "TENSOR_FLOW_LITE_C_CORE_ML_API_URL=$TENSOR_FLOW_LITE_C_CORE_ML_API_URL.zip" >> $GITHUB_ENV
#          
#      - name: Update Package.swift
#        if: steps.check-tag.outputs.exists == 'false'
#        run: |
#          cp -f Package.swift.in Package.swift
#          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_API_URL}}|${{ env.TENSOR_FLOW_LITE_C_API_URL }}|g" Package.swift
#          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_CHECKSUM}}|${{ env.TENSOR_FLOW_LITE_C_CHECKSUM }}|g" Package.swift
#          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_CORE_ML_API_URL}}|${{ env.TENSOR_FLOW_LITE_C_CORE_ML_API_URL }}|g" Package.swift
#          sed -i '' -e "s|{{TENSOR_FLOW_LITE_C_CORE_ML_CHECKSUM}}|${{ env.TENSOR_FLOW_LITE_C_CORE_ML_CHECKSUM }}|g" Package.swift
#          git add Package.swift
#          git commit -m "Update Package.swift"
#          git push -u origin release-${{ github.event.inputs.release_version }}
#          git tag -m "Update release commit" -f -a ${{ github.event.inputs.release_version }} $(git rev-parse origin/release-${{ github.event.inputs.release_version }})
#          git push -f origin refs/tags/${{ github.event.inputs.release_version }}

